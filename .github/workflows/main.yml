on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

name: Route53 DynDns

jobs:
#  style:
#    name: Style
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Format
#        run: cargo fmt --all -- --check
#      - name: Clippy
#        run: cargo clippy --features "strict"
#  test:
#    name: Test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Code Coverage
#        run: |
#          ./bin/create_test_bin.sh
#          docker run --name coverage -i \
#            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
#            -e GITHUB_WORKSPACE=$GITHUB_WORKSPACE \
#            -e CODECOV_TOKEN=$CODECOV_TOKEN \
#            --security-opt seccomp=unconfined \
#            kcov/kcov bash -c "$GITHUB_WORKSPACE/bin/generate_report.sh"
#      - name: Upload Coverage Report
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#        run: bash <(curl -s https://codecov.io/bash)
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: snapper/route53-dyndns
#    needs:
#      - style
#      - test
    steps:
      - uses: actions/checkout@master
      - name: Authenticate
        run: ./.github/scripts/auth.sh
        env:
          USERNAME: ${{ secrets.DOCKER_USER }}
          PASSWORD: ${{ secrets.DOCKER_PW }}
      - name: Build Project
        run: cargo build --release --features "strict"
#      - name: Build Docker Container
#        run: docker build -t $DOCKER_IMAGE:$GITHUB_RUN_ID .
#      - name: Push Container
#        # todo: only push when master
#        # only push the container if it was build on master
#        # if: github.ref == 'ref/head/master'
#        run: |
#          docker tag $DOCKER_IMAGE:$GITHUB_RUN_ID $DOCKER_IMAGE:latest
#          docker push $DOCKER_IMAGE:$GITHUB_RUN_ID
#          docker push $DOCKER_IMAGE:latest
      - uses: actions/upload-artifact@master
        with:
          name: release-build
          path: target/release/route53-dyndns
  functional_tests:
    name: Functional Tests
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: snapper/route53-dyndns
    needs:
      - build
    steps:
      - uses: actions/download-artifact@master
        with:
          name: release-build
          path: ~/route53_dyndns
      - name: Create Config
        run: |
          cat <<EOF > ~/test-config.yml
          domains:
            - provider: aws
              tld: henkel.tech
              domain: ${{ github.sha }}.dyndns.henkel.tech
          EOF
      - name: Test Executable
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FT_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
        run: ~/route53_dyndns -c ~/test-config.yml
